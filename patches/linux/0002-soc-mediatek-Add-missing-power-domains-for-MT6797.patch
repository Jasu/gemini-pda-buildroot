From 70a2e12be588f89221f5ce2bb7b9246f6e4ee9ec Mon Sep 17 00:00:00 2001
From: Jasper Mattsson <jasu@njomotys.info>
Date: Sat, 25 Aug 2018 15:34:41 +0300
Subject: [PATCH] soc: mediatek: Add missing power domains for MT6797

Some power domains were missing from scpsys for MT6797. Without these,
the probe for scpsys would fail, since the array of power domains would
contain NULL values.

Signed-off-by: Jasper Mattsson <jasu@njomotys.info>
---
 drivers/soc/mediatek/mtk-scpsys.c | 61 +++++++++++++++++++++++++++++--
 1 file changed, 57 insertions(+), 4 deletions(-)

diff --git a/drivers/soc/mediatek/mtk-scpsys.c b/drivers/soc/mediatek/mtk-scpsys.c
index d11e3e476..c490d463a 100644
--- a/drivers/soc/mediatek/mtk-scpsys.c
+++ b/drivers/soc/mediatek/mtk-scpsys.c
@@ -97,6 +97,7 @@ enum clk_id {
 	CLK_HIFSEL,
 	CLK_JPGDEC,
 	CLK_AUDIO,
+	CLK_MJC,
 	CLK_MAX,
 };
 
@@ -111,6 +112,7 @@ static const char * const clk_names[] = {
 	"hif_sel",
 	"jpgdec",
 	"audio",
+	"mjc",
 	NULL,
 };
 
@@ -716,7 +718,7 @@ static const struct scp_domain_data scp_domain_data_mt6797[] = {
 		.ctl_offs = 0x304,
 		.sram_pdn_bits = GENMASK(11, 8),
 		.sram_pdn_ack_bits = GENMASK(15, 12),
-		.clk_id = {CLK_NONE},
+		.clk_id = {CLK_VENC},
 	},
 	[MT6797_POWER_DOMAIN_ISP] = {
 		.name = "isp",
@@ -724,7 +726,7 @@ static const struct scp_domain_data scp_domain_data_mt6797[] = {
 		.ctl_offs = 0x308,
 		.sram_pdn_bits = GENMASK(9, 8),
 		.sram_pdn_ack_bits = GENMASK(13, 12),
-		.clk_id = {CLK_NONE},
+		.clk_id = {CLK_MM},
 	},
 	[MT6797_POWER_DOMAIN_MM] = {
 		.name = "mm",
@@ -741,7 +743,7 @@ static const struct scp_domain_data scp_domain_data_mt6797[] = {
 		.ctl_offs = 0x314,
 		.sram_pdn_bits = GENMASK(11, 8),
 		.sram_pdn_ack_bits = GENMASK(15, 12),
-		.clk_id = {CLK_NONE},
+		.clk_id = {CLK_AUDIO},
 	},
 	[MT6797_POWER_DOMAIN_MFG_ASYNC] = {
 		.name = "mfg_async",
@@ -751,13 +753,59 @@ static const struct scp_domain_data scp_domain_data_mt6797[] = {
 		.sram_pdn_ack_bits = 0,
 		.clk_id = {CLK_MFG},
 	},
+	[MT6797_POWER_DOMAIN_MFG] = {
+		.name = "mfg",
+		.sta_mask = BIT(12),
+		.ctl_offs = 0x338,
+		.sram_pdn_offs = 0x33c,
+		.sram_ack_offs = 0x33c,
+		.sram_pdn_bits = GENMASK(1, 0),
+		.sram_pdn_ack_bits = GENMASK(17, 16),
+		.clk_id = {CLK_MFG},
+	},
+	[MT6797_POWER_DOMAIN_MFG_CORE0] = {
+		.name = "mfg_core0",
+		.sta_mask = BIT(11),
+		.ctl_offs = 0x340,
+		.sram_ack_offs = 0x33c,
+		.sram_pdn_bits = BIT(8),
+		.sram_pdn_ack_bits = BIT(20),
+		.clk_id = {CLK_MFG},
+	},
+	[MT6797_POWER_DOMAIN_MFG_CORE1] = {
+		.name = "mfg_core1",
+		.sta_mask = BIT(10),
+		.ctl_offs = 0x344,
+		.sram_ack_offs = 0x33c,
+		.sram_pdn_bits = BIT(8),
+		.sram_pdn_ack_bits = BIT(21),
+		.clk_id = {CLK_MFG},
+	},
+	[MT6797_POWER_DOMAIN_MFG_CORE2] = {
+		.name = "mfg_core2",
+		.sta_mask = BIT(9),
+		.ctl_offs = 0x348,
+		.sram_ack_offs = 0x33c,
+		.sram_pdn_bits = BIT(8),
+		.sram_pdn_ack_bits = BIT(22),
+		.clk_id = {CLK_MFG},
+	},
+	[MT6797_POWER_DOMAIN_MFG_CORE3] = {
+		.name = "mfg_core3",
+		.sta_mask = BIT(8),
+		.ctl_offs = 0x34c,
+		.sram_ack_offs = 0x33c,
+		.sram_pdn_bits = BIT(8),
+		.sram_pdn_ack_bits = BIT(23),
+		.clk_id = {CLK_MFG},
+	},
 	[MT6797_POWER_DOMAIN_MJC] = {
 		.name = "mjc",
 		.sta_mask = BIT(20),
 		.ctl_offs = 0x310,
 		.sram_pdn_bits = GENMASK(8, 8),
 		.sram_pdn_ack_bits = GENMASK(12, 12),
-		.clk_id = {CLK_NONE},
+		.clk_id = {CLK_MJC},
 	},
 };
 
@@ -769,6 +817,11 @@ static const struct scp_subdomain scp_subdomain_mt6797[] = {
 	{MT6797_POWER_DOMAIN_MM, MT6797_POWER_DOMAIN_ISP},
 	{MT6797_POWER_DOMAIN_MM, MT6797_POWER_DOMAIN_VENC},
 	{MT6797_POWER_DOMAIN_MM, MT6797_POWER_DOMAIN_MJC},
+	{MT6797_POWER_DOMAIN_MFG_ASYNC, MT6797_POWER_DOMAIN_MFG},
+	{MT6797_POWER_DOMAIN_MFG, MT6797_POWER_DOMAIN_MFG_CORE0},
+	{MT6797_POWER_DOMAIN_MFG, MT6797_POWER_DOMAIN_MFG_CORE1},
+	{MT6797_POWER_DOMAIN_MFG, MT6797_POWER_DOMAIN_MFG_CORE2},
+	{MT6797_POWER_DOMAIN_MFG, MT6797_POWER_DOMAIN_MFG_CORE3},
 };
 
 /*
-- 
2.18.0

